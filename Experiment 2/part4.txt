;-------------------------------------------------------------------------------
; MSP430 Assembler Code Template for use with TI Code Composer Studio
;
;
;-------------------------------------------------------------------------------
            .cdecls C,LIST,"msp430.h"       ; Include device header file
            
;-------------------------------------------------------------------------------
            .def    RESET                   ; Export program entry-point to
                                            ; make it known to linker.
;-------------------------------------------------------------------------------
            .text                           ; Assemble into program memory.
            .retain                         ; Override ELF conditional linking
                                            ; and retain current section.
            .retainrefs                     ; And retain any sections that have
                                            ; references to current section.

;-------------------------------------------------------------------------------
RESET       mov.w   #__STACK_END,SP         ; Initialize stackpointer
StopWDT     mov.w   #WDTPW|WDTHOLD,&WDTCTL  ; Stop watchdog timer
			mov.b	#0d, P2SEL


;-------------------------------------------------------------------------------
; Main loop here
;-------------------------------------------------------------------------------
SETUP		bis.b #00ffh, &P1DIR ; as output
			bis.b #00fh, &P2DIR ; as output except p2.6 pin , P2.6 pin is input
			mov  #elif, R4
			mov.b #0h, R10  ;index counter1


;these 6 lines of code are standard things to do
;in order to enable a pin of a port to generate interrupts.
init_INT 	bis.b #040h, &P2IE ; enable interrupt at P2.6  01000000
			and.b #0BFh, &P2SEL ; set 0 P2SEL .6   10111111
			and.b #0BFh, &P2SEL2 ; set 0 P2SEL2 .6 to enable interrupt at P2.6  10111111
			bis.b #040h, &P2IES ; high to low interrupt mode
			clr &P2IFG ; clear the flag
			eint ;enable interrupts

START	mov.b #00h, R5  ;count press button

CONTROL	cmp #00h, R5
		jeq Elif
		cmp #02d, R5
		jeq Elif
		cmp #04d, R5
		jeq Elif
		cmp #5d, R5 ;if press 5times, code will be initial status
		jeq SETUP
		jmp STOP


;LOOP
Elif		mov.b @R4+, &P1OUT
			inc.b R10
			call #Delay
			cmp #04h, R10
			jeq CLEAR
			jmp CONTROL

CLEAR		sub R4, R10
			mov  #elif, R4
			clr R10
			jmp CONTROL

STOP 		mov.b @R4 ,&P1OUT
			jmp CONTROL

Delay	  mov.w #0Ah ,R14 ;Delay to R14
L2 		  mov.w #07A00h , R15
L1 		  dec.w R15 ; Decrement R15
		  jnz L1
		  dec.w R14
		  jnz L2
		  ret

ISR 	dint ; Disable interrupts
		inc.b	R5
		clr &P2IFG ; Clear the flag
		eint ; Enable interrupts
		reti ; Return from interrupt


elif .byte 00111000b, 00111111b, 00111111b, 01110011b; LOOP


Finish nop


;------------------------------------------------------------------------------
; Stack Pointer definition
;-------------------------------------------------------------------------------
            .global __STACK_END
            .sect   .stack
            
;-------------------------------------------------------------------------------
; Interrupt Vectors
;-------------------------------------------------------------------------------
           .sect ".reset" ; MSP430 RESET Vector
			.short RESET
			.sect ".int03" ; Port Interrupt Vector for P2. This information
		;is in fact obtained from msp430g2553.h header
		;file where it is defined. For ex. int02; is defined for port 1.
			.short ISR ;service routine for the interrupt in Port 2.


