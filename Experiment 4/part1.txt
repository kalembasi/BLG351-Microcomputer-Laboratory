;-------------------------------------------------------------------------------
; MSP430 Assembler Code Template for use with TI Code Composer Studio
;
;
;-------------------------------------------------------------------------------
            .cdecls C,LIST,"msp430.h"       ; Include device header file
            
;-------------------------------------------------------------------------------
            .def    RESET                   ; Export program entry-point to
                                            ; make it known to linker.
;-------------------------------------------------------------------------------
            .text                           ; Assemble into program memory.
            .retain                         ; Override ELF conditional linking
                                            ; and retain current section.
            .retainrefs                     ; And retain any sections that have
                                            ; references to current section.

;-------------------------------------------------------------------------------
RESET       mov.w   #__STACK_END,SP         ; Initialize stackpointer
StopWDT     mov.w   #WDTPW|WDTHOLD,&WDTCTL  ; Stop watchdog timer
			mov.b	#0d, P2SEL


;-------------------------------------------------------------------------------
; Main loop here
;-------------------------------------------------------------------------------
SETUP

			bis.b #0ffh, &P1DIR
			bis.b #0fh, &P2DIR
			mov #digits, R6
			mov #arr, R7
			mov.b #0d, R10  ;index counter

MAIN1		mov.w	#00000001b, P2OUT
			mov.b @R6, r8
			inc r6
			add R8, R7
			mov.b @r7, &P1OUT
			inc.b R10
			call #Delay
			cmp #04h, R10
			jeq CLEAR
			jmp MAIN2

MAIN2		mov.w	#00000010b, P2OUT
			mov #arr, R7
			mov.b @R6, r8
			inc r6
			add R8, R7
			mov.b @r7, &P1OUT
			inc.b R10
			call #Delay
			cmp #04h, R10
			jeq CLEAR
			jmp MAIN3

MAIN3		mov.w	#00000100b, P2OUT
			mov #arr, R7
			mov.b @R6, r8
			inc r6
			add R8, R7
			mov.b @r7, &P1OUT
			inc.b R10
			call #Delay
			cmp #04h, R10
			jeq CLEAR
			jmp MAIN4

MAIN4		mov.w	#00001000b, P2OUT
			mov #arr, R7
			mov.b @R6, r8
			inc r6
			add R8, R7
			mov.b @r7, &P1OUT
			inc.b R10
			call #Delay
			cmp #04h, R10
			jeq CLEAR
			jmp FINISH

CLEAR		sub R6, R10
			clr R10
			ret

FINISH		jmp FINISH


Delay	  mov.w #0Ah ,R14 ;Delay to R14
L2 		  mov.w #07Ah , R15
L1 		  dec.w R15 ; Decrement R15
		  jnz L1
		  dec.w R14
		  jnz L2
		  ret


		    .data
digits 		.byte  5, 7, 2, 9



arr			.byte 	00111111b , 00000110b , 01011011b , 01001111b , 01100110b , 01101101b , 01111100b , 00000111b , 01111111b , 01100111b



;-------------------------------------------------------------------------------
; Stack Pointer definition
;-------------------------------------------------------------------------------
            .global __STACK_END
            .sect   .stack
            
;-------------------------------------------------------------------------------
; Interrupt Vectors
;-------------------------------------------------------------------------------
            .sect   ".reset"                ; MSP430 RESET Vector
            .short  RESET
            
